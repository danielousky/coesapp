=# render partial: '/admin/usuarios/datos_modal'
%nav
	.nav.nav-tabs
		= link_to "General", "#general", "data-toggle": :tab, class: 'nav-item nav-link'
		- @estudiante.grados.each_with_index do |grado,i|
			- active = (i.eql? 0) ? 'active' : ''
			= link_to "#{grado.escuela.descripcion.titleize}", "#pane_#{grado.id}", "data-toggle": :tab, class: "nav-item nav-link #{active}"
		= link_to "Horario (#{current_periodo.id})", "#actualPeriodo", "data-toggle": :tab, class: 'nav-item nav-link'

.tab-content
	- @estudiante.grados.each_with_index do |grado, i| 
		- active = (i.eql? 0) ? 'active show' : ''

		.tab-pane.border.border-top-0.p-3{id: "pane_#{grado.id}", class: active}
			- # VARIABLES:
			- @grado = grado
			- @escuela = grado.escuela
			- @inscripciones = @estudiante.inscripcionsecciones.joins(:escuela).where("escuelas.id = :e or pci_escuela_id = :e", e: @escuela.id)
			
			- #@inscripciones = @grado.inscripciones.joins(:escuela).where("pci_escuela_id = :e", e: @escuela.id)
			
			- periodo_ids = @inscripciones.joins(:seccion).group("secciones.periodo_id").count.keys
			- @periodos = Periodo.where(id: periodo_ids).order(inicia: :desc)
			- if current_usuario.eql? @estudiante.usuario and @grado and (!@escuela.id.eql? 'POST') and @grado.reportepago.nil? and @grado.asignado? and !@grado.inscripciones.any? 
				- @reportable = @grado
				- @reportepago = Reportepago.new
				- content = render partial: "/admin/reportepagos/form"
				= render partial: '/layouts/modal_layout_with_form', locals: {id_modal: "reportarPagoGrado#{@grado.id}", content: content, title: 'Reportar Pago a la Facultad de Ingreso a Escuela', width: "modal-lg"}
				= link_to 'javascript:void(0)', onclick: "$('#reportarPagoGrado#{@grado.id}').modal()", class: 'm-3 btn btn-success' do
					= glyph 'plus'
					= "Reportar Pago Ingreso a #{@escuela.descripcion}"

			- if @periodo_inscripcion = @escuela.periodo_inscripcion
				- @escupe = @escuela.escuelaperiodos.where(periodo_id: @periodo_inscripcion.id).first
				- @inscripcionperiodo = @estudiante.inscripcionescuelaperiodos.where(escuelaperiodo_id: @escupe.id).first unless @escupe.nil?
				- @limiteCreditos = @escupe.limite_creditos_permitidos
				- @limiteAsignaturas = @escupe.limite_asignaturas_permitidas
				- if @inscripcionperiodo.nil? or (@inscripcionperiodo and @inscripcionperiodo.reservado?)
					-# periodo_anterior = @escuela.periodo_anterior @periodo_inscripcion.id
					- @totalCreditosReservados = @inscripcionperiodo ? @inscripcionperiodo.total_creditos : 0
					- @totalAsignaturasReservadas = @inscripcionperiodo ? @inscripcionperiodo.total_asignaturas : 0
					- periodo_anterior = @escuela.periodo_anterior @periodo_inscripcion.id
					-# periodo_anteanterior = @escuela.periodo_anterior periodo_anterior.id
					
					- jornada_horaria_actual = Jornadacitahoraria.actual(@escupe.id).first
					- if false #jornada_horaria_actual
						.alert.alert-info
							%b Jornada Actual de Inscripción
							%p= "Hora de Inicio: #{jornada_horaria_actual.inicio.strftime('%I:%M%P')}"

					- inscripcion_abierta_por_citahoraria = (jornada_horaria_actual and @grado.citahoraria and jornada_horaria_actual.puede_inscribir? @grado.citahoraria)
					
					-# con_inscripciones_en_periodo_anterior = @grado.inscripciones.del_periodo(periodo_anterior.id).any?)
					- con_inscripciones_en_periodo_anterior = @grado.inscripciones.de_los_periodos(["2019-01S", "2019-02S", "2020-01U", "2021-01S", "2021-02S", "2019-01C", "2019-02C", "2020-01C", "2021-01C", "2021-02C"]).any?

					- valido_inscripcion_regular = ((@grado.confirmado? or @grado.reincorporado?) and (!@grado.inscripciones.any? or con_inscripciones_en_periodo_anterior))

					- autorizado_especial = (@grado.autorizar_inscripcion_en_periodo_id.eql? @periodo_inscripcion.id)
					- inscripcion_en_proceso = @inscripcionperiodo and @inscripcionperiodo.reservado?

					- inscripcion_abierta_por_regular = valido_inscripcion_regular or autorizado_especial or inscripcion_en_proceso

					- # OJO: ESTA CONDICION INCLUYE 2 PERIODOS ANTERIORES. PREGUNTAR SI DEBE SER ASÍ O NO
					- # inscripcion_abierta_por_regular = (@grado.autorizar_inscripcion_en_periodo_id.eql? @periodo_inscripcion.id) or ((@grado.confirmado? or @grado.reincorporado?) and (!@grado.inscripciones.any? or @grado.inscripciones.del_periodo(periodo_anterior.id).any? or @grado.inscripciones.del_periodo(periodo_anteanterior.id).any? ))

					-if inscripcion_abierta_por_citahoraria or (!inscripcion_abierta_por_citahoraria and inscripcion_abierta_por_regular)

						- if @escuela.dependencias_habilitadas?
							- asignaturas_ofertables_segun_dependencia = @grado.asignaturas_ofertables_segun_dependencia
							- asignaturas_ofertadas_x_escuela = @escuela.asignaturas.activas(@periodo_inscripcion.id).order(anno: :asc)
							- if false #Numeros de dependencias
								.alert.alert-info
									= asignaturas_ofertables_segun_dependencia.ids
									.badge.badge-dark= asignaturas_ofertables_segun_dependencia.count

								.alert.alert-success
									= asignaturas_ofertadas_x_escuela.ids
									.badge.badge-dark= asignaturas_ofertadas_x_escuela.count
								-# aux = asignaturas_ofertadas_x_escuela.reject{|a| asignaturas_ofertables_segun_dependencia.include? a}
								- aux = asignaturas_ofertadas_x_escuela.merge(asignaturas_ofertables_segun_dependencia)
								.alert.alert-warning
									= aux.map{|a| a.id}
									.badge.badge-dark= aux.count
							- asignaturas_ofertadas_x_escuela = asignaturas_ofertadas_x_escuela.merge(asignaturas_ofertables_segun_dependencia)

						- else
							- asignaturas_ofertadas_x_escuela = @escuela.asignaturas.activas(@periodo_inscripcion.id).order(anno: :asc )

						- @aprobadas = @inscripciones.aprobadas.includes(:seccion).map{|s| [s.id, s.seccion.asignatura_id]}.uniq.flatten
						-# inscripciones = @inscripciones.del_periodo(current_periodo.id)
						- titulo_modal = "Proceso de Preinscripción #{@periodo_inscripcion.id}"
						- titulo_btn = "Preinscribirse"
						- msgDanger = "Seleccione las asignaturas que desea preinscribir. Recuerde mover el scroll para ver todas las asignaturas ofertadas."
						- url = '/inscripcionsecciones/preinscribirse'
						- idModal = "preinscripcion#{@escuela.id}"
						= render partial: 'admin/inscripcionsecciones/seleccionar_preinscripcion_form', locals: {asignaturas_ofertadas: asignaturas_ofertadas_x_escuela, url: url, id_modal: idModal, title: titulo_modal, msgDanger: msgDanger, title_btn: titulo_btn}
						- if false #@inscripcionperiodo and @inscripcionperiodo.reservado?
							:javascript
								$(`##{idModal}`).modal();

					- elsif !jornada_horaria_actual
						.alert.alert-warning
							%b Atención: 
							Verifique alguna de las siguientes opciones con el personal administrativo para habilitar su inscripción:
							%ul
								- if !@grado.confirmado? and !@grado.reincorporado?
									%li= "No esta confirmado o asignado como reincorporado en #{@escuela.descripcion.titleize} para poder realizar su preinscribirse."
								- if !@grado.inscripciones.del_periodo(periodo_anterior.id).any?
									%li= "Debe haber inscrito asignaturas en el período inmediatemente anterior #{periodo_anterior.id} (Regulares)."
								- if @grado.inscripciones.del_periodo(@periodo_inscripcion.id).any?
									%li= "Ya ha realizado su inscripción en #{@periodo_inscripcion.id} (Nuevo Ingreso)." 
				- else
					- if @inscripcionperiodo.reportepago.nil? and @periodo_inscripcion.es_mayor_al_anno? 2019
						.alert.alert-warning.text-justify
							- @asignaturas = @inscripcionperiodo.inscripcionsecciones.map { |ins| ins.asignatura}
							- @escuela_desc = @inscripcionperiodo.escuela.descripcion
							- @periodo_id = @inscripcionperiodo.periodo.id
							- @nombre = @inscripcionperiodo.estudiante.usuario.primer_nombre_apellido
							- @genero = @inscripcionperiodo.estudiante.usuario.genero

							= render template: 'estudiante_mailer/preinscrito'

						= link_to new_reportepago_path(reportable_id: @inscripcionperiodo.id, reportable_type: @inscripcionperiodo.class.name), class: 'btn btn-block btn-lg btn-success tooltip-btn mb-2' do
							= glyph 'chevron-right'
							= "Reportar pago de inscripción el periodo #{@periodo_inscripcion.id}"

			-if @grado.citahoraria and @grado.duracion_franja_horaria and @inscripcionperiodo.nil?
				.border.p-md-3
					%h5 Cita Horaria:

					%h5.alert.alert-warning.text-justify
						%b Atención:
						= "Estimad#{@estudiante.usuario.genero} #{@estudiante.usuario.nickname.titleize}, le informamos que su Cita Horaria es el"
						%b
							=(I18n.localize(@grado.citahoraria, :format => "%A, %d de %B de %Y de %I:%M %p")).capitalize()
							a
							=(I18n.localize(@grado.franja_horaria, :format => " %I:%M %p,")).capitalize()
						= "usted podrá inscribirse <b>ÚNICAMENTE</b> durante este lapso de tiempo. Por favor, piense muy bien las asignaturas que va inscribir porque para este período no se va a permitir el retiro de materias.".html_safe

			- if @grado.historialplanes.any?
				.border.p-md-3
					%h5 Planes:
					- @grado.historialplanes.order('periodo_id DESC').each do |pl| 
						%p= pl.descripcion
			- if @escuela.id.eql? 'IDIO' and @estudiante.combinaciones.any?
				.border.p-md-3
					%h5 Combinación de Idiomas:
					- @estudiante.combinaciones.each do |c| 
						%p= c.descripcion

			- if false #@escuela.dependencias_habilitadas? # Dependencias activas para la escuela
				= render partial: '/admin/grados/dependencias'

			= render partial: '/admin/grados/historial_academico'

		- if false #@escuela.id.eql? 'IDIO' and !@estudiante.combinaciones.any?
			- @idiomas = escuela.departamentos.reject{|i| i.id.eql? 'EG' or i.id.eql? 'TRA'; }
			= render '/admin/estudiantes/actualizar_idiomas'
	
	.tab-pane#actualPeriodo.border.px-3.border-top-0
		=# render '/admin/horarios/horario_secciones'
		= render '/admin/principal_estudiante/horarios'
	.tab-pane#general.border.px-3.border-top-0
		= render partial: '/admin/usuarios/personales_contacto'



