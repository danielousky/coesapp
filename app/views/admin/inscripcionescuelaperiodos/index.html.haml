= link_to periodos_path, class: 'btn btn-sm btn-secondary tooltip-btn float-left mr-3', 'data_toggle': :tooltip,  title: 'Regresar' do
	= glyph 'chevron-left'
	Regresar 

%table#dataTable.table.table-sm
	= text_field_tag nil, nil, {id: :max, class: 'float-right form-control-sm ml-3', placeholder: 'Hasta', onfocus: "(this.type='date')"}
	= text_field_tag nil, nil, {id: :min, class: 'float-right form-control-sm ml-1', placeholder: 'Desde', onfocus: "(this.type='date')"}
	.float-right.ml-3.pt-2 Fecha:
	%thead
		%tr
			%th
				- if params[:status].eql? 'reported' 
					Fecha Reporte
				- else
					Fecha Preins

			%th Cédula
			%th Email
			%th Apellidos
			%th Nombres
			%th Escuelas
			- if params[:status].eql? 'reported'
				%th Reporte
				%th Monto
			%th Plan
			%th Asig. Inscritas
			%th Región
			%th Créditos
			%th Resumen 
			%th C. Aprob.
			%th Total C. Aprob.
			%th Total Créditos Plan
			%th Ingreso
			%th Periodo Inicial
			%th Secretaría
			- if params[:status].eql? TipoEstadoInscripcion::INSCRITO or params[:status].eql? 'reported'
				%th Pago

	%tbody

		- @inscripciones.each do |ins|
			- grado = ins.grado
			- clase = grado.nil? ? 'table-danger' : ''
			%tr{class: clase}
				- usuario = ins.estudiante.usuario
				- if params[:status].eql? 'reported' and ins.reportepago
					- obj = ins.reportepago
				- else
					- obj = ins
				
				%td= I18n.l(obj.created_at, format: "%d/%m/%Y")

				%td= link_to ins.estudiante_id, usuario_path(usuario.id)
				%td= usuario.email
				%td= usuario.apellidos
				%td= usuario.nombres
				%td= ins.grado.escuela.descripcion
				- if params[:status].eql? 'reported' and ins.reportepago
					%td= ins.reportepago.numero
					%td= ins.reportepago.monto_con_formato
				- plan = grado.plan if grado
				- if plan.nil?
					- hplan = ins.grado.historialplanes.joins(:plan).where("planes.escuela_id = ?", @escuelaperiodo.escuela_id).order('periodo_id DESC').first#.plan_id
					- plan = hplan.plan if plan
					- plan ? hplan.plan_id : "--"
				-# hplan = est.ultimo_plan_de_escuela(@escuelaperiodo.escuela_id)
				%td= plan ? plan.id : "--"
				%td= ins.inscripcionsecciones.count
				
				%td= grado.region.titleize if grado and grado.region
				%td= ins.inscripcionsecciones.total_creditos
				%td
					%table
						%tbody
							- ins.inscripcionsecciones.each do |aux| 
								%tr
									%td= aux.seccion.desc_asig_numero
				%td= ins.inscripcionsecciones.aprobado.total_creditos
				%td= grado.total_creditos_aprobados
				%td= plan.creditos if plan
				%td= grado.tipo_ingreso if grado
				%td= grado.iniciado_periodo_id if grado
				%td= grado.inscrito_ucv_label if grado
				%td
					- if rp = ins.reportepago
						= link_to_if (rp.respaldo and rp.respaldo.attached?), rp.descripcion_con_ci, main_app.url_for(rp.respaldo), target: '_blank', rel: "noopener noreferrer"

					- else
						Sin Reporte de Pago






:javascript

	var minDate, maxDate;

	// Custom filtering function which will search data in column four between two values
	$.fn.dataTable.ext.search.push(
		function( settings, data, dataIndex ) {
			var min = minDate;
			var max = maxDate;
			var aux = data[0].split("/");

			var date = new Date(aux[2], aux[1]-1, aux[0], 4);

			if (
			( min === null && max === null ) ||
			( min === null && date <= max ) ||
			( min <= date   && max === null ) ||
			( min <= date   && date <= max )
			) {
				return true;
			}
				return false;
		}
	);


	$(document).ready(function() {

		minDate = null;
		maxDate = null;

		let tableData =  $('#dataTable').DataTable({
			scrollX: true,
			scrollY: 460,
			pageLength: 50,
			// lengthChange: false,
			paging: false,
			dom: '<"html5buttons"B>lTfgitp',
			buttons: [
				{extend: 'excel', text: "<span class='glyphicon glyphicon-download'></span> Excel", title: `Inscripciones-#{current_periodo.id}-#{@escuelaperiodo.escuela_id}`, className: 'btn btn-sm btn-outline-info'},
				{extend: 'pdf', text: "<span class='glyphicon glyphicon-download'></span> PDF", title: `PDF-Inscripciones-#{current_periodo.id}-#{@escuelaperiodo.escuela_id}`, className: 'btn btn-sm btn-outline-info'} 
			],
			language: 
				{
				"sProcessing":     "Procesando...",
				"sLengthMenu":     "Mostrar _MENU_ registros",
				"sZeroRecords":    "No se encontraron resultados",
				"sEmptyTable":     "Ningún dato disponible en esta tabla",
				"sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
				"sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
				"sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
				"sInfoPostFix":    "",
				"sSearch":         "Buscar:",
				"sUrl":            "",
				"sInfoThousands":  ",",
				"sLoadingRecords": "Cargando...",
				"oPaginate": {
				"sFirst":    "Primero",
				"sLast":     "Último",
				"sNext":     "Siguiente",
				"sPrevious": "Anterior"
				},
				"oAria": {
					"sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
					"sSortDescending": ": Activar para ordenar la columna de manera descendente"
				}
			}
		});

		$('#min, #max').on('change', function () {

			let aux = $('#min').val();
			if (aux != ""){
				aux = aux.split('-');
				minDate = new Date(aux[0], aux[1]-1, aux[2], 4);
			}
			aux = $('#max').val();
			if (aux != ""){
				aux = aux.split('-');
				maxDate = new Date(aux[0], aux[1]-1, aux[2], 4);
			}

			tableData.draw();

		});

	});