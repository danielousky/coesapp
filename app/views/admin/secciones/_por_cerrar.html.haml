.alert#message{role: :alert, style: 'display:none;position:absolute;right: 300px; padding:5px; margin-top:15px'} 
%br
= form_tag(calificar_seccion_path) do
	= hidden_field_tag "id", @seccion.id
	= hidden_field_tag "cerrar", true
	%table.dataTable.table.table-bordered.table-striped.table-sm.table-hover{style: "text-align:left;"}
		= render 'admin/secciones/tabla_headers_tipo_seccion'#, locals: {inscripciones: inscripciones}

		%tbody
			- inscripciones.each_with_index do |es,i|
				- disable = (es.pi? || es.retirado? || (es.inscripcionescuelaperiodo and es.inscripcionescuelaperiodo.preinscrito?))#(es.diferido? || es.reparacion?)
				- disable_porterior = es.pi? || es.retirado? || !(es.diferido? || es.reparacion? || (es.inscripcionescuelaperiodo and es.inscripcionescuelaperiodo.preinscrito?))
				%tr{id: "reg_#{es.estudiante_id}", class: es.tr_class_style_qualify}
					= render partial: 'admin/inscripcionsecciones/id_and_estudiante', locals: {i: i, es: es}
					- if es.retirado?
						= render partial: 'admin/inscripcionsecciones/retirado', locals: {es: es}
					- else
						= render partial: 'admin/secciones/tabla_content_tipo_seccion', locals: {i: i, es: es, seccion: @seccion, disable: disable}
						- unless @seccion.asignatura.absoluta?
							%td
								%b.tooltip-btn{'data_toggle': :tooltip, title: 'Marcar como perdida por inasistencia'}
									= check_box_tag "[est][#{es.estudiante_id}]pi", true, es.pi?, {onclick: "desactivar_por_pi(this, #{es.estudiante_id});", class: 'pi', ci: es.estudiante_id, disabled: es.retirado?}
							- if !@seccion.asignatura.numerica3?
								%td
									%b.tooltip-btn{'data_toggle': :tooltip, title: 'Colocar Califición Diferida'}
										= check_box_tag "[est][#{es.estudiante_id}]nd", true, es.diferido?, {onclick: "desactivar_por_nd(this, #{es.estudiante_id});", tipo: "ND", disabled: es.retirado?}

							%td
								%b.tooltip-btn{'data_toggle': :tooltip, title: 'Colocar Calificación Reparación'}
									= check_box_tag "[est][#{es.estudiante_id}]nr", true, es.reparacion?, {onclick: "desactivar_por_nd(this, #{es.estudiante_id});", tipo: "NR", disabled: es.retirado?}
						
							- tipo = ""
							- tipo = "ND" if es.diferido?
							- tipo = "NR" if es.reparacion?
							- valor_posterior = es.calificacion_posterior.to_i if es.calificacion_posterior
							%td
								%b.tooltip-btn{'data_toggle': :tooltip, title: 'Valor calificación posterior'}
									= number_field_tag "[est][#{es.estudiante_id}]calificacion_posterior", {}, {value: valor_posterior, class: 'form-control form-control-sm otra_calificacion', required: !disable_porterior, disabled: disable_porterior,  :step => 1, :in => 0...21, onchange: "numero_a_letras($(this).val(), #{es.estudiante_id});", tipo_calificacion_id: tipo, id_obj: es.id}

					%td= text_field_tag "[#{es.estudiante_id}]calificacion_en_letras", {}, {readonly: true, disabled: true, value: es.calificacion_en_letras, class: 'form-control form-control-sm'}
					- if current_admin
						%td= (es.created_at-4.hours).strftime('%d/%m/%Y %H:%M %p')
	%hr
		= submit_tag "Guardar", id: "submit", class: "btn btn-outline-success float-right ml-md-2", disable_with: "Espere..."
:javascript

	$(document).ready(function() {
		$('a[data-toggle="tab"]').on( 'shown.bs.tab', function (e) {
			$($.fn.dataTable.tables( true ) ).css('width', '100%');
			$($.fn.dataTable.tables( true ) ).DataTable().columns.adjust().draw();
		});
	});
	
	$('#submit').click(function(e){

		let form = $(this).parents('form')[0]
		if (form.checkValidity() == true) {
			let = confi = confirm('Una vez que guardes las calificaciones no podrás cambiar su valor, ¿Estás Seguro?')
			if (confi === false) {
				e.preventDefault()
				e.stopPropagation()
			}
		}
	})

	if ("${if @seccion.asignatura.absoluta?}") {

		$(document).ready(function() {
			$('.absoluta').click(function(){
				let clase = 'table-success'
				let ci = $(this).attr('ci'),
				valor_letras = $(this).attr('final')
				if (valor_letras == 'APLAZADO') clase = 'table-danger'
			});

			$(`#_${ci}calificacion_en_letras`).val(valor_letras);
			$(`#reg_${ci}`).removeClass().addClass(clase);
		});
	}else console.log('No Absoluta')


	window.onload = function() {

		$('.numerica3').change(function(){
			let id = $(this).attr('id_obj'),
			tipo = $(this).attr('tipo_calificacion_id'),
			cali = $(this).attr('calificacion_parcial')
			let val = $(this).val() ? $(this).val() : -1

			let values = `{"inscripcionseccion_id": ${id}, "valor": ${val}, "tipo_calificacion_id": "${tipo}", "calificacion_parcial": "${cali}" }`
			console.log(values)
			send_data(values)

		});

		$('.calificable').change(function(){

			let id = $(this).attr('id_obj'),
			tipo = $(this).attr('tipo_calificacion_id'),
			val = $(this).val(),
			values = `{"inscripcionseccion_id": ${id}, "calificacion_final": ${val}, "tipo_calificacion_id": "${tipo}"}`

			console.log(values)
			send_data(values)
			console.log('finalmente calificada')

		});

		$('.otra_calificacion').change(function(){
			let id = $(this).attr('id_obj'),
			tipo = $(this).attr('tipo_calificacion_id'),
			val = $(this).val(),
			values = `{"inscripcionseccion_id": ${id}, "calificacion_posterior": ${val}, "tipo_calificacion_id": "${tipo}"}`
			
			console.log(values)
			send_data(values)

		});

		$('#vacios_a_pi').click(function(){
			let padre = $(this)
			$('.pi').each(function(){
				let ci, final, post;
				ci = $(this).attr('ci')

				final = $('#_est_' + ci + 'calificacion_final').val()
				var val1 = padre.prop('checked')
				var val2 = $(this).prop('checked')
				if ((val1 != val2) & (final == 0 | final === undefined)){
					$(this).click()
					console.log(ci+ " : "+final)
				}
			});

		});
		
	}

	function send_data(values){
		$.ajax({
			url: `#{cambiar_calificacion_inscripcionsecciones_path}`,
			type: 'POST',
			data: JSON.parse(values),
			dataType: 'json', 
			beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))}  
		})
		.done(function( msg ) {

			if (msg == true) {
				messageSendData('alert-success', 'Calificación guardada dinámicamente')
			}else{
				messageSendData('alert-danger', 'Ocurrió un problema al intentar guardar. Por favor, intnete más tarde')
			}
		});

	}
	
	function messageSendData(clase, msg) {
		let elem = $('#message');

		elem.removeClass();
		elem.addClass(`alert ${clase}`);
		elem.html(msg);
		
		elem.fadeIn(2000);
		elem.fadeOut();

		/*
		setTimeout(function(){
		elem.parentNode.removeChild(elem);
		},5000);
		document.body.appendChild(elem);
		*/

	}

	function resetear_numericos(valor, ci){

		if (valor === true) {
			numero_a_letras('-1', ci);
		}else{
			numero_a_letras('0', ci);
		}
		$('#reg_' + ci + ' input[type="number"]').val('');
	}


	function desactivar_por_pi(obj, ci){
		let numeros, radios, inputs, valor, post, id, values;

		id = $('#_est_' + ci + 'calificacion_final').attr('id_obj')

		if(id === undefined){id = $('#_est_' + ci + 'calificacion_final_1').attr('id_obj')}

		inputs = $('#reg_' + ci + ' input');
		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');

		valor = $(obj).prop('checked');
		post = $('#_est_' + ci + 'calificacion_posterior');

		inputs.prop('disabled', valor);
		numeros.prop('required', !valor);

		$(obj).prop('disabled', false);
		$(obj).prop('required', false);
		post.prop('disabled', true);
		post.prop('required', false);

		if (valor === true) {
			numero_a_letras('-1', ci);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "PI"}`
		}else{
			numero_a_letras('0', ci);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "NF"}`
		}
		console.log(values)
		send_data(values)
		numeros.val('')

		radios.prop('checked', false);
		
		$("#_"+ci+"calificacion_en_letras").prop('disabled', true);
		$("#_"+ci+"calificacion_en_letras").prop('readonly', true);		
	}


	function desactivar_por_nd(obj, ci){
		var checks, post, valor, numeros, radios, id, values, final, aux, tipo;

		aux = $('#_est_' + ci + 'calificacion_final')

		id = aux.attr('id_obj')
		tipo = $(obj).attr('tipo')
		final = aux.val()

		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');
		checks = $('#reg_'+ci+' input:checkbox');
		
		post = $('#_est_' + ci + 'calificacion_posterior');

		valor = $(obj).prop('checked')

		checks.prop('disabled', valor);

		$(obj).prop('disabled', false);

		post.prop('disabled', !valor);
		post.prop('required', valor);
		

		if (valor === false){
			numero_a_letras('0', ci);
			//numeros.val('');
			radios.prop('checked', false);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "NF", "calificacion_posterior": 0}`
			send_data(values)

		}else{

			post.attr('tipo_calificacion_id', tipo)
		}
		console.log("Valores: "+values)
	
	}

	function desactivar_otros_inputs(obj, ci, nr){
		var checks, numeros, post, valor, radios;

		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');
		checks = $('#reg_' + ci + ' input:checkbox');

		post = $('#_est_' + ci + 'calificacion_posterior');

		valor = $(obj).prop('checked');

		numeros.prop('disabled', valor);
		checks.prop('disabled', valor);
		numeros.prop('required', !valor);
		$(obj).prop('disabled', false);

		if(nr == 1){
			post.prop('disabled', !valor);
			post.prop('required', valor);

			numero_a_letras('0', ci);

		}else{
			numero_a_letras('-1', ci);
		}
		$("#_"+ci+"calificacion_en_letras").prop('disabled', true);
		$("#_"+ci+"calificacion_en_letras").prop('readonly', true);		
	}


	function numero_a_letras(valor, ci){
		let final, clase,
		valores = ['CERO', 'UNO', 'DOS', 'TRES', 'CUATRO', 'CINCO', 'SEIS', 'SIETE', 'OCHO', 'NUEVE', 'DIEZ', 'ONCE', 'DOCE', 'TRECE', 'CATORCE', 'QUINCE'] 

		valor = parseInt(valor)
		if (valor == 0){
			final = 'CERO CERO'
			clase = 'table-danger'
		}else if (!valor){
			final = 'POR DEFINIR'
			clase = ''
		}else if (valor == -1){
			final = 'PÉRDIDA POR INASISTENCIA'
			clase = 'table-danger'
		}else if (valor > -1 & valor < 10){
			console.log(valor)
			final = `CERO ${valores[valor]}`
			clase = 'table-danger'
		}else if (valor > 9 & valor < 16) {
			final = valores[valor]
			clase = 'table-success'
		}else if (valor > 15 & valor < 20){
			valor = valor % 10
			final = `DIEZ Y ${valores[valor]}`
			clase = 'table-success'
		}else if (valor == 20){
			final = 'VEINTE'
			clase = 'table-success'
		}else{
			final = 'POR DEFINIR'
			clase = ''
		}
		$(`#reg_${ci}`).removeClass().addClass(clase);
		$(`#_${ci}calificacion_en_letras`).val(final);

	}



	function calcular(p1,p2,p3,ci){
		
		
		let nota1 = $(`#_est_${ci}primera_calificacion`).val(),
		nota2 = $(`#_est_${ci}segunda_calificacion`).val(),
		nota3 = $(`#_est_${ci}tercera_calificacion`).val()

		nota1 = parseFloat(nota1)
		nota2 = parseFloat(nota2)
		nota3 = parseFloat(nota3)


		if (nota1 && nota2 && nota3) {

			let percent1 = ((p1*nota1)/100).toFixed(1)
			percent1 = Math.round(percent1 * 10) / 10

			let percent2 = ((p2*nota2)/100).toFixed(1)
			percent2 = Math.round(percent2 * 10) / 10

			let percent3 = ((p3*nota3)/100).toFixed(1)
			percent3 = Math.round(percent3 * 10) / 10

			let final = (percent1 + percent2 + percent3).toFixed(0);
			
			let final_field = $("#_est_"+ci+"calificacion_final")
			
			final_field.val(final)
			
			let id = final_field.attr('id_obj'),
			values = `{"inscripcionseccion_id": ${id}, "calificacion_final": ${final}}`

			numero_a_letras(final, ci)

			send_data(values)
			console.log(values)
			console.log('finalmente calificada')

		}else{
			$("#_est_"+ci+"calificacion_final").val('')
			$(`#reg_${ci}`).removeClass().addClass('')
			$(`#_${ci}calificacion_en_letras`).val('CALIFICACIÓN PENDIENTE')
			
		}

	}


