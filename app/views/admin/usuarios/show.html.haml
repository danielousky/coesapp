- if current_admin.ninjas_or_jefe_control_estudio?
  = link_to usuario_path(@usuario), method: :delete, class: 'btn btn-sm btn-danger float-right tooltip-btn', 'data_toggle': :tolltip, title: "Eliminar usuario completamente", data: { confirm: 'Esta acción eliminará irreversiblemente todas las asociaciones del usuario así como sus roles. ¿Está Seguro?'} do
    = glyph 'remove'
%nav
  .nav.nav-tabs
    - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : '' 
    = link_to "#personales", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'personal')" do
      = glyph 'user'
      Datos Personales y de Contacto

    - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
    -  if @estudiante
      = link_to "#historial", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'estudiante')" do
        = glyph 'education'
        Como Estudiante

    - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
    - if @profesor
      = link_to "#profesor", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'profesor')" do
        = glyph 'book'
        Como Profesor
    - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
    - if @administrador
      = link_to "#administrador", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'administrador')" do
        = glyph 'wrench'
        Como Administrador
    - if (current_admin.autorizado? 'Bitacoras', 'index')
      - activeTab = (session[:usuarioTypeTab].eql? 'bitacora') ? 'active' : ''  
      = link_to "#bitacora", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'bitacora')" do
        = glyph 'road'
        Bitácora

    - if current_admin and (current_admin.autorizado? 'Usuarios', 'set_estudiante' or current_admin.autorizado? 'Grados', 'agregar')
      = render '/admin/usuarios/set_estudiante'
    
    - if !@estudiante and current_admin and (current_admin.autorizado? 'Usuarios', 'set_estudiante' or current_admin.autorizado? 'Grados', 'agregar')

      = link_to "javascript:void(0)", "data-toggle": :tooltip, class: "text-success nav-item nav-link tooltip-btn", title: "Registrar a #{@nickname} como Estudiante", onclick: "$('#agregarGrado').modal();" do
        = glyph 'plus'
        = glyph 'education'
        Estudiante

    - if !@administrador and current_admin.maestros?
      = link_to "javascript:void(0)", "data-toggle": :tooltip, class: "text-success nav-item nav-link tooltip-btn", title: "Registrar a #{@nickname} como Administrador", onclick: "$('#setAdmin').modal();" do
        = glyph 'plus'
        = glyph 'wrench'
        Administrador
      = render '/admin/usuarios/set_administrador'
    - if !@profesor and current_admin and (current_admin.autorizado? 'Usuarios', 'set_profesor')
      = link_to "javascript:void(0)", "data-toggle": :tooltip, class: "text-success nav-item nav-link tooltip-btn", title: "Registrar a #{@nickname} como Profesor", onclick: "$('#setProfesor').modal();" do
        = glyph 'plus'
        = glyph 'book'
        Profesor
      = render '/admin/usuarios/set_profesor'
      
  .tab-content
    - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : ''  
    .tab-pane#personales.border.p-3.border-top-0{class: activeTab}
      = render partial: '/admin/usuarios/personales_contacto'
    - if @estudiante
      - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
      .tab-pane#historial.p-3.border.p-3.border-top-0{class: activeTab}
        - if current_admin.ninja?
          = link_to "#{delete_rol_usuario_path(@usuario)}?estudiante=true", class: 'btn btn-sm btn-danger float-right tooltip-btn', 'data_toggle': :tolltip, title: "Eliminar Como Estudiante", data: { confirm: 'Esta acción eliminará irreversiblemente todas las asociaciones del estudiante. ¿Está Seguro?'} do
            = glyph 'trash'
        %nav
          .nav.nav-tabs
            - if @secciones_pci_pendientes.any?
              - activeTabPCI = (session[:tabEscuela].eql? 'pci') ? 'active' : ''
              = link_to '¡Asignaturas sin Escuela asignadas!', "#pane_PCI", "data-toggle": :tab, class: "nav-item nav-link alert alert-danger #{activeTab}", onclick: "setTab('tabEscuela', 'pci')"
            - @estudiante.escuelas.each do |escuela|
              - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''  
              = link_to "#pane_#{escuela.id}", "data-toggle": :tab, class: "nav-item nav-link #{activeTab}", onclick: "setTab('tabEscuela', '#{escuela.id}')" do
                = "#{escuela.descripcion.titleize}"
            .nav-item.nav-link
              - if current_admin and (current_admin.autorizado? 'Usuarios', 'set_estudiante' or current_admin.autorizado? 'Grados', 'agregar')
                = simple_icon_toggle_modal "Registrar a #{@nickname} en una Escuela", 'success', 'plus', 'agregarGrado'
        .tab-content
          - if @secciones_pci_pendientes.any?
            .tab-pane.border.p-3.border-top-0{id: "pane_PCI", class: activeTabPCI}            
              %h6.alert.alert-danger.pb-ms-3#alertPCI Tome en cuenta que el estudiante puede no estar inscrito en todas sus escuelas. Por favor verifique que aparecen las pestañas correspondiantes.
              %h6.alert.alert-danger.pb-ms-3#alertPCI Asignaturas pendientes por asignar escuelas (PCI):
              - @foraneas = true
              = render partial: '/admin/estudiantes/table_contenido_historial', locals: {inscripciones: @secciones_pci_pendientes}
          - @foraneas = false
          -# @escuelas_del_estudiante = @estudiante.grados
          - @escuelas_del_estudiante = @estudiante.escuelas
          - @estudiante.grados.each do |grado|
            - @grado = grado
            - escuela = grado.escuela
            - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''
            - @escuela = escuela
            .tab-pane.border.p-3.border-top-0{id: "pane_#{escuela.id}", class: activeTab}
              -# @inscripciones = @estudiante.inscripcionsecciones.joins(:escuela).where("escuelas.id = :e or pci_escuela_id = :e", e: @escuela.id)
              - @inscripciones = grado.inscripciones # ¡¡¡ Probar !!!
              - escupe = escuela.escuelaperiodos.where(periodo_id: current_periodo.id).first
              - @inscripcionperiodo = @estudiante.inscripcionescuelaperiodos.where(escuelaperiodo_id: escupe.id).first if escupe

              - periodo_ids = @inscripciones.joins(:seccion).group("secciones.periodo_id").count.keys
              %h6.alert.alert-info.pb-ms-3
                = "Escuela: #{@escuela.descripcion.titleize}"
                - if (current_admin and current_admin.autorizado? 'Grados', 'eliminar')
                  = simple_icon_toggle_modal 'Eliminar Escuela', 'danger', 'minus', "eliminar#{escuela.id}"
                  = render partial: '/admin/estudiantes/eliminar_escuela'
              .row
                .col-md-6
                  = render partial: '/admin/grados/info_inscripcion', locals: {grado: grado}
                .col-md-6
                  %h6.titulo.mb-md-2.text-center 
                    - if current_admin and (current_admin.autorizado?('Grados', 'cambiar_inscripcion')) and grado.citahoraria.nil?
                      .float-left.tooltip-btn{'data_toggle': :tooltip, title: 'Agregar Nueva Cita Horaria'}
                        = link_to('javascript:void(0)', { class: 'update_grado_btn text-success m-1', 'data_toggle': :modal, id: 'citahoraria'}) do
                          = glyph :plus
                    Cita Horaria:
                  - if grado.citahoraria and grado.duracion_franja_horaria
                    %b.pl-2
                      =(I18n.localize(grado.citahoraria, :format => "Fecha: %A, %d de %B de %Y de %I:%M %p")).capitalize()
                      =(I18n.localize(grado.franja_horaria, :format => "a %I:%M %p")).capitalize()

                    - if current_admin and (current_admin.autorizado?('Grados', 'cambiar_inscripcion'))

                      .float-left.tooltip-btn{'data_toggle': :tooltip, title: 'Cita Horaria'}
                        = link_to('javascript:void(0)', { class: 'update_grado_btn text-success m-1', 'data_toggle': :modal, id: 'citahoraria'}) do
                          = glyph :pencil

                      %td
                        = link_to "#{cambiar_inscripcion_grado_path(grado)}?[grado]citahoraria=nil", method: 'post', class: 'text-danger'  do
                          = glyph :trash

                  = render partial: '/admin/historialplanes/index', locals: {grado: grado}
                  = render '/admin/combinaciones/index' if @escuela.id.eql? 'IDIO'
              -# @curso = @estudiante.grados.where(escuela_id: escuela.id).first
              -# @inscripciones = @curso.inscripciones
              - @periodos = Periodo.where(id: periodo_ids).order(inicia: :desc)
              = render partial: '/admin/grados/historial_academico'

    - if @profesor
      - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
      .tab-pane#profesor.border.p-3.border-top-0{class: activeTab}
        = render partial: '/admin/profesores/show'

    - if current_admin.maestros? and @administrador
      - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
      .tab-pane#administrador.border.p-3.border-top-0{class: activeTab}
        = render file: '/admin/administradores/show'

    - if (current_admin.autorizado? 'Bitacoras', 'index')
      - activeTab = (session[:usuarioTypeTab].eql? 'bitacora') ? 'active' : ''  
      .tab-pane#bitacora.border.p-3.border-top-0{class: activeTab}
        %br
        %h6.text-center.titulo Acciones del usuario:
        - @bitacoras = @usuario.bitacoras.limit(50).order(created_at: :desc)
        = render file: '/admin/bitacoras/index' 
        %br
        %h6.text-center.titulo Actividades aplicadas al usuario:
        - @bitacoras = Bitacora.search(@usuario.id).limit(50).order(created_at: :desc)
        = render file: '/admin/bitacoras/index' 

- content = render partial: 'admin/inscripcionsecciones/form_cambio_seccion', locals: {secciones: Seccion.where(id: nil)}
- url = cambiar_seccion_inscripcionsecciones_path
= render partial: '/layouts/modal_layout', locals: {url: url, id_modal: 'cambiarSeccion', title: 'Cambiar Sección', content: content, width: nil}


:javascript

  function setupCambioSeccion(id, secciones){

    document.getElementById('cambiarSeccionForm')[2].value = id
    let select = document.getElementById('inscripcionseccion_seccion_id')

    for(var i = 1; i < select.options.length; i++) {
      //select.options[i] = null
      select.remove(i)
    }
    console.log(select.length)
    for(var i = 0; i < secciones.length; i++) select.options[i+1] = new Option(secciones[i][1], secciones[i][0]);

    // document.getElementById('cabiarSeccion').modal()
    $('#cambiarSeccion').modal()
  }
