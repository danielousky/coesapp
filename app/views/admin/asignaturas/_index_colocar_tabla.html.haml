- if @asignaturas.first
  - escuela = @asignaturas.first.escuela
- elsif params[:escuela_id]
  - escuela = Escuela.find params[:escuela_id]
- else
  - escuela = @escuela
= render partial: '/admin/escuelas/eliminar_programacion', locals: {escuela: escuela}
.tab-content
  .border.p-3
    - if (current_admin and current_admin.autorizado? 'Asignaturas', 'create')
      = link_to "#{new_asignatura_path}?escuela_id=#{escuela.id}", class: "btn btn-outline-success btn-sm tooltip-btn float-left mr-2", 'data_toggle': :tooltip, title: "Agregar Nueva Asignatura en #{escuela.descripcion}" do
        = glyph 'plus'
        Nueva

    - periodo_anterior = escuela.periodo_anterior(current_periodo.id)
    - if periodo_anterior and (current_admin and current_admin.autorizado? 'Escuelas', 'clonar_programaciones')
      = link_to 'javascript:void(0)', class: 'clonar btn btn-outline-info btn-sm tooltip-btn float-left mr-2', 'data_toggle': :tooltip, title: "Clonar Programación de Periodos anteriores", escuela_id: escuela.id do
        = glyph 'file'
        = glyph 'chevron-right'
        = glyph 'duplicate'

    - if (current_admin and current_admin.autorizado? 'Escuelas', 'limpiar_programaciones')
      - disabledClean = escuela.secciones.del_periodo(current_periodo.id).any? ? '' : 'disabled'
      = link_to 'javascript:void(0)', class: "btn btn-outline-danger btn-sm tooltip-btn #{disabledClean} float-left mr-2", 'data_toggle': :tooltip, title: "Eliminar Programación del periodo actual #{current_periodo.id}", onclick: "$('#BorrarClonacion#{escuela.id}').modal()", disabled: disabledClean do
        = glyph 'duplicate'
        = glyph 'chevron-right'
        = glyph 'trash'

    %table.table.table-striped.table-sm.table-hover.table-bordered.table-responsive-md.mt-3{id: "table#{escuela.id}"}
      %thead
        %tr
          %th ID
          %th Descripción
          %th Departamento
          %th Cátedra
          %th Tipo
          %th Orden
          %th T. de las q depende
          %th T. dependencias
          %th Calif.
          %th U. Créditos
          %th Secciones
          - if (current_admin and current_admin.autorizado? 'Asignaturas', 'set_activa')
            %th Activa
            %th PCI
          %th Opciones
      %tbody
        - @asignaturas.each do |asignatura| 
          -# success_class = (asignatura.activa? current_periodo.id) ? 'table-success' : ''
          %tr
            %td= link_to asignatura.id_uxxi, asignatura_path(asignatura.id)
            %td= asignatura.descripcion
            %td= asignatura.departamento.descripcion
            %td= asignatura.catedra.descripcion
            %td= asignatura.tipoasignatura.descripcion.titleize
            %td= asignatura.orden
            %td= asignatura.dependencia_hacia_atras.count
            %td= asignatura.dependencias.count
            %td= asignatura.calificacion.to_s
            %td= asignatura.creditos
            %td
              %table
                %tr
                  - asignatura.secciones.del_periodo(current_periodo).each do |s| 
                    %td
                      - if (current_admin and current_admin.autorizado? 'Secciones', 'show') 
                        = link_to s.numero, seccion_path(s.id)
                      - else
                        = s.numero

                  - if (current_admin and current_admin.autorizado? 'Secciones', 'create')
                    %td= btn_plus_seccion_modal asignatura
            - if (current_admin and current_admin.autorizado? 'Asignaturas', 'set_activa')
              %td
                = render partial: '/layouts/onoffswitch', locals: {titulo: '¿Activar Asignatura?', url: set_activa_asignatura_path(asignatura.id), id: asignatura.id, chequeada: (asignatura.activa? current_periodo.id), id_html: "activas_#{asignatura.id}"}
              %td 
                - hidden = (asignatura.tiene_programaciones? current_periodo.id) ? '' : 'hideble'
                .div{id: "pci_#{asignatura.id}", class: hidden} 
                  = render partial: '/layouts/onoffswitch', locals: {titulo: '¿PCI?', url: set_pci_asignatura_path(asignatura.id), id: asignatura.id, chequeada: asignatura.pci?(current_periodo.id), id_html: "pci_switch_#{asignatura.id}"}
            
            %td
              - if current_admin and (current_admin.autorizado? 'Asignaturas', 'destroy')
                .float-right
                  - if !(asignatura.secciones.any?)
                    = link_to asignatura_path(asignatura), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: '¿Está seguro?')) }, class: 'btn btn-sm', title: "#{ t('.destroy', default: t('helpers.links.destroy')) }" do
                      .text-danger= glyph 'trash'
                  - else
                    .btn.btn-sm.tooltip-btn{'data-toggle': :tooltip, title: 'Elimine las secciones en éste u otro período para activar la opción'}
                      .text-muted= glyph 'trash'
              - if current_admin and (current_admin.autorizado? 'Asignaturas', 'update')
                .float-right.ml-1
                  .tooltip-btn{'data_toggle': :tooltip, title: 'Editar Asignatura'}
                    = link_to edit_asignatura_path(asignatura), class: 'btn btn-sm', title: "#{ t('.edit', default: t('helpers.links.edit')) }" do
                      = glyph 'pencil'

:javascript

  $(document).ready(function() {
    
    $('a[data-toggle="tab"]').on( 'shown.bs.tab', function (e) {
      $($.fn.dataTable.tables( true ) ).css('width', '100%');
      $($.fn.dataTable.tables( true ) ).DataTable().columns.adjust().draw();
    } );

    $(`#table#{escuela.id}`).DataTable({
      scrollY: 400,
      fixedHeader: {
          header: true,
          footer: true
      },      
      // pageLength: 100,
      // lengthChange: false,
      paging: false,
      dom: '<"html5buttons"B>lTfgitp',
      buttons: [
        {extend: 'excel', text: "<span class='glyphicon glyphicon-download'></span> Excel", title: `Asiganturas-#{current_periodo.id}-#{escuela.id}`, className: 'btn btn-sm btn-outline-info'}
      ],
      language: 
        {
        "sProcessing":     "Procesando...",
        "sLengthMenu":     "Mostrar _MENU_ asignaturas",
        "sZeroRecords":    "No se encontraron resultados",
        "sEmptyTable":     "Ningún dato disponible en esta tabla",
        "sInfo":           "Mostrando asignaturas del _START_ al _END_ de un total de _TOTAL_ asignaturas",
        "sInfoEmpty":      "Mostrando asignaturas del 0 al 0 de un total de 0 asignaturas",
        "sInfoFiltered":   "(filtrado de un total de _MAX_ asignaturas)",
        "sInfoPostFix":    "",
        "sSearch":         "Buscar:",
        "sUrl":            "",
        "sInfoThousands":  ",",
        "sLoadingRecords": "Cargando...",
        "oPaginate": {
        "sFirst":    "Primero",
        "sLast":     "Último",
        "sNext":     "Siguiente",
        "sPrevious": "Anterior"
        },
        "oAria": {
          "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
          "sSortDescending": ": Activar para ordenar la columna de manera descendente"
        }
      }
    });
  });
